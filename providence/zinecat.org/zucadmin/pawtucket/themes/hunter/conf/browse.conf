cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [dataset, image, interactive_resource, moving_image, physical_object, service, software, sound, text],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			map = {
				name = map,
				icon = glyphicon-globe,
				data = ca_objects.georeference.georeference_location,
				width = 100%,
				height = 500px,
				display = {
					title_template =  <l>^ca_objects.preferred_labels.name</l>,
					description_template = <p>^ca_objects.description</p>,
					icon = <div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div>	
				}
			},
			timeline = {
				data = ca_objects.date.dates_value,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l>,
					description_template = <p>^ca_objects.description</p>,
					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.dates_value
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc,
			Date = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
}

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("object type"),
			label_plural = _("object types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [ind],
			exclude_relationship_types = [interviewer],
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [org],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [displayname, surname, forename],
			
			indefinite_article = an,
			label_singular = _("organization"),
			label_plural = _("organizations"),
			description = _("Find objects according to the organizations associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated decade."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = year,
			requires = [decade_facet],
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated years."),			
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			order_by_label_fields = [name],
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			#hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = ,
			
			# can be ASC or DESC (default is DESC)
			#hierarchy_order  = DESC,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		},
#		collection_facet = {
#			type = authority,
#			table = ca_collections,
#			relationship_table = ca_objects_x_collections,
#			restrict_to_types = [collection],
#			order_by_label_fields = [name],
#			
#			group_mode = none,
#
#			label_singular = _("collection"),
#			label_plural = _("collections"),
#			description = _("Find objects according to the Collections they belong to."),
#		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
			description = _("Find objects according to the place relationships in your collection.  You can choose to view the available places as a list or heirarchy of place names.")
		},
		keyword_facet = {
			type = attribute,
			element_code = keyword,
			
			group_mode = alphabetical,

			label_singular = _("keyword"),
			label_plural = _("keywords"),
			description = _("Find objects according to their keywords."),
		},	
		lcsh_facet = {
			type = attribute,
			element_code = lcsh_terms,
			
			group_mode = alphabetical,

			label_singular = _("Subject"),
			label_plural = _("Subjects")
		}
	}
}


views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = Browse Collection

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browse_menu_format =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =