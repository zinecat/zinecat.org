#
# 
#
cache_timeout = 0

browseTypes = {
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [collection],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}, 
			list = {}
		},
		
		sortBy = { 
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		
		options = {
			selectMediaUsingRelationshipTypes = [featured]
		}
		icon_class = <i class='fa fa-picture-o fa-lg' style='font-size:1.4em;'></i><i class='fa fa-picture-o fa-lg' style='margin:0px 0px 0px -15px; background-color:#FFF; font-size:1em; line-height:.9em;'></i><i class='fa fa-picture-o fa-lg' style='margin:0px 0px 0px -7px; background-color:#FFF; font-size:.7em; line-height:.7em;'></i>
	},
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		
		table = ca_objects,
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			timeline = {				
				data = ca_objects.dateSet.setDisplayValue,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					description_template = <p>^ca_objects.description</p>,
					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		
		sortBy = {
			Date = ca_objects.dateSet.setDisplayValue,
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		
		options = {
			extendedInformationTemplate = <ifcount code='ca_collections' min='1'><div style='float: right;'>Part of: <unit relativeTo='ca_collections'><l>^ca_collections.preferred_labels.name</l></unit></div></ifcount>
		},
		icon_class = <i class='fa fa-picture-o fa-lg'></i>
	},
	people = {
		displayName = _(People),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		
		# comment this out or leave empty if you don't want to restrict by type
		restrictToTypes = [person],
		
		# comment this out or leave empty if you want all available facets presented to the user
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		options = {
			selectMediaUsingRelationshipTypes = [featured]
		}
		
		sortBy = {
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		icon_class = <i class='fa fa-user fa-lg'></i>
	},
	organizations = {
		displayName = _(Organizations),
		labelSingular = _("organization"),
 		labelPlural = _("organizations"),
		table = ca_entities,
		
		# comment this out or leave empty if you don't want to restrict by type
		restrictToTypes = [corporate_body],
		
		# comment this out or leave empty if you want all available facets presented to the user
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		options = {
			selectMediaUsingRelationshipTypes = [featured]
		}
		
		sortBy = {
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		icon_class = <i class='fa fa-users fa-lg'></i>
	}
}

#
# Facet definitions
#
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			order_by_label_fields = [name_singular],

			label_singular = _("object type"),
			label_plural = _("object types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		person_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [person],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("related person"),
			label_plural = _("related people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [corporate_body],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("related organization"),
			label_plural = _("related organizations"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = alphabetical,
			dont_expand_hierarchically = 1,
			
			order_by_label_fields = [name_singular],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("term"),
			label_plural = _("terms"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = setDisplayValue,
			normalization = decades,
			
			minimum_date = 1500,
			maximum_date = 2020,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [collection],
			dont_include_subtypes = 0,
			
			group_mode = none,
			order_by_label_fields = [name],

			label_singular = _("related collection"),
			label_plural = _("related collections"),
			description = _("Find objects according to the Collections they belong to."),
		}
	}
}

ca_entities = {
	name = _("Entities"),
	facets = {
		collections_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			order_by_label_fields = [name],
			
			group_mode = alphabetical,
			
			label_singular = _("related collection"),
			label_plural = _("related collections")
		}
	}
}

ca_occurrences = {

}

ca_collections = {
	name = _("Collections"),
	facets = {
			repository_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_ca_list_items,
			
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = alphabetical,
			dont_expand_hierarchically = 1,
			
			order_by_label_fields = [name_singular],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = an,
			label_singular = _("collection group"),
			label_plural = _("collection groups"),
			description = _("Find collections by group."),
		},
		person_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [person],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("related person"),
			label_plural = _("related people")
		},
		org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [corporate_body],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("related organization"),
			label_plural = _("related organizations")
		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

defaultHitsPerBlock = 36
