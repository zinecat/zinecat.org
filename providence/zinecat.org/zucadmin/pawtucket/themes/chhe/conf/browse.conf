#
# 
#
defaultHitsPerBlock = 36


cache_timeout = 600

browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		restrictToTypes = [],
		availableFacets = [],
		
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.date.dates_value
		},
		
		options = {
			extendedInformationTemplate = <ifcount code='ca_collections' min='1'>Part of: <unit relativeTo='ca_collections'><l>^ca_collections.preferred_labels.name</l></unit></ifcount>
		}
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		availableFacets = [],
		
		sortBy = { 
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		}
	},
	organizations = {
		displayName = _(Organizations),
		labelSingular = _("organization"),
 		labelPlural = _("organizations"),
		table = ca_entities,
		restrictToTypes = ["org"],
		availableFacets = [],
		
		sortBy = { 
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.displayname
		}
	},
	individuals = {
		displayName = _(Individuals),
		labelSingular = _("individual"),
 		labelPlural = _("individuals"),
		table = ca_entities,
		restrictToTypes = ["ind"],
		availableFacets = [],
		
		sortBy = { 
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname
		}
	}
}

#
#
#
# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		 term_facet = {
 			type = authority,
 			table = ca_list_items,
 			relationship_table = ca_objects_x_vocabulary_terms,
 			restrict_to_types = [],
 			
 			individual_group_display = 0,
 			
 			group_mode = alphabetical,
 			
 			# Set to non-zero value to display hierarchy on items in this facet
 			show_hierarchy = 1,
 			
 			# Character(s) to place between elements of the hierarchy
 			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
 			
 			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
 			remove_first_items = ,
 			
 			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
 			hierarchy_limit = 3,
 			
 			# can be ASC or DESC (default is DESC)
 			hierarchy_order  = DESC,
 			
 			label_singular = _("subject"),
 			label_plural = _("subjects"),
 			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
 		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = ["events"],
			
			individual_group_display = 1,
			
			show_all_when_first_facet = 0,
			
			groupings = {
				label = _("Name")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("occurrence"),
			label_plural = _("occurrences"),
			description = _("Find objects by Occurrences associated with your records&#44; such as historical events&#44; productions&#44; and other record types in your collection."),
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			show_description_when_first_facet = description,
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = ["ind"],
			show_description_when_first_facet = biography,
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},	
		org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = ["org"],
			show_description_when_first_facet = biography,
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("organization"),
			label_plural = _("organizations"),
			description = _("Find objects according to the organizations associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("object type"),
			label_plural = _("object types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		> place_facet = {
> 			# 'type' can equal authority, attribute, fieldList, normalizedDates
> 			type = authority,		
> 			table = ca_places,
> 			relationship_table = ca_objects_x_places,
> 			restrict_to_types = [],
> 			
> 			individual_group_display = 1,
> 			
> 			group_mode = hierarchical,
> 			order_by_label_fields = [name],
> 			
> 			# Set to non-zero value to display hierarchy on items in this facet
> 			show_hierarchy = 1,
> 			
> 			# Character(s) to place between elements of the hierarchy
> 			hierarchical_delimiter = &nbsp;⬅&nbsp;,
> 			
> 			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
> 			remove_first_items = ,
> 			
> 			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
> 			hierarchy_limit = 3,
> 			
> 			# can be ASC or DESC (default is DESC)
> 			hierarchy_order  = DESC,
> 			
> 			indefinite_article = a,
> 			label_singular = _("place"),
> 			label_plural = _("places"),
> 			description = _("Find objects according to the place relationships in your collection.  You can choose to view the available places as a list or heirarchy of place names.")
> 		},
		decade_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = years,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		}
	}
}
# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	name = _("Collections"),
	facets = {
		ind_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = ["ind"],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("individual"),
			label_plural = _("individuals")
		},
		org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = ["org"],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("organization"),
			label_plural = _("organizations")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		}
	}
}
# --------------------------------------------------------------------
# Configuration for entities
ca_entities = {
	name = _("Entities"),
	facets = {
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			show_description_when_first_facet = description,
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		}
	}
}