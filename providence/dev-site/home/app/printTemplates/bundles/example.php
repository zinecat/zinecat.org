<?php
/* ----------------------------------------------------------------------
 * app/templates/bundle.php
 * ----------------------------------------------------------------------
 * CollectiveAccess
 * Open-source collections management software
 * ----------------------------------------------------------------------
 *
 * Software by Whirl-i-Gig (http://www.whirl-i-gig.com)
 * Copyright 2014 Whirl-i-Gig
 *
 * For more information visit http://www.CollectiveAccess.org
 *
 * This program is free software; you may redistribute it and/or modify it under
 * the terms of the provided license as published by Whirl-i-Gig
 *
 * CollectiveAccess is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTIES whatsoever, including any implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
 *
 * This source code is free and modifiable under the terms of 
 * GNU General Public License. (http://www.gnu.org/copyleft/gpl.html). See
 * the "license.txt" file for details, or visit the CollectiveAccess web site at
 * http://www.CollectiveAccess.org
 *
 * -=-=-=-=-=- CUT HERE -=-=-=-=-=-
 * Template configuration:
 *
 * @name Example bundle template
 * @type page
 * @pageSize letter
 * @pageOrientation portrait
 * @tables ca_objects
 * @elementCode your_element_code_here
 *
 * @marginTop 0.75in
 * @marginLeft 0.25in
 * @marginBottom 0.5in
 * @marginRight 0.25in
 *
 * ----------------------------------------------------------------------
 */

// Attribute values to display are provided in two formats:

	// As an array of instances of class Attribute (see app/lib/ca/Attributes/Attribute.php).
	// Each instance can be used to get display values for value(s) attached to that attribute.
	//
	// This is the most flexible way to receive data for display. You can query the instance for additional 
	// information about the attribute and control how display text is generated by calling getDisplayValue() on individual 
	// attribute value instances contained within.
	$va_values_as_attribute_instances = $this->getVar('valuesAsAttributeInstances');

	// An array of arrays, each of which contains data about a value. Values (there may be more than one if the attribute
	// is a container) are indexed by element code with the value set to the display value for each element.
	//
	// This is the simplest way to get attribute content for dsplay.
	$va_values_as_element_indexed_arrays = $this->getVar('valuesAsElementCodeArrays');

?>
	<table>
<?php
	foreach($va_values_as_element_indexed_arrays as $va_value) {
		print "<tr><td>".$va_value['number_ne']."</td><td>".$va_value['ne_purchaser']."</td></tr>\n";
	}
?>
	</table>