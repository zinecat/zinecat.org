#      _____  _____  _____  _____                   __
#     |____ ||  _  ||  _  ||  _  |                 / _|
#  ____   / /| |_| | \ V /  \ V /   ___ ___  _ __ | |_
# |_  /   \ \\____ | / _ \  / _ \  / __/ _ \| '_ \|  _|
#  / /.___/ /.___/ /| |_| || |_| || (_| (_) | | | | |
# /___\____/ \____(_)_____/\_____(_)___\___/|_| |_|_|
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Pawtucket 2.0
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# z39.88 COiNs configuration
#
# Info @ http://docs.collectiveaccess.org/wiki/Pawtucket2:Configuration
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# This file maps metadata elements ("bundles") in your CollectiveAccess schema to elements in the Z39.88 bibliographic schema
# These mappings are used to generate CoiNS bibliographic metadata which can be included on output web pages and ingested
# by Zotero or other bibliographic management software.
#
# Each mapping has three affilations, indicated by three enclosing blocks. The first block is the mapping group name. Groups
# enable you to define alternative mappings for the same record types, and load them by group name on demand. For example:
# if you needed to have several alternate mappings for object records, you could vary the group name to which each belongs so they
# could be distinguished. If you omit the group name when applying a mapping the mappings in the __default__ group are used. 
#
# The second block indicates the type of item the mapping is used for. These types are table name: ca_objects = objects,
# ca_entities = entities, ca_places = places, etc. 
#
# The third block indicates the specific type of item the mapping applies to. This lets you, for example, restrict a mapping to only 
# objects of type "video." Use the list item idno code of the type to identify it, or use __default__ to indicate that the mapping applies to
# all types.
#
# The Z39.88 elements are defined by the standard. All possible elements are shown below along with brief descriptions. Uncomment
# the elements you want to map. So long as the contents of an element mapping are preceded with "#" signs they will remain inactive.
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

__default__ = {
	ca_objects = {
		__default__ = {
			# DocType - the type of document; should be set to one of the following numeric codes
			#
			# 0 = Article
			# 1 = Book Item (e.g. a chapter, section, etc)
			# 2 = Book
			# 3 = Unpublished MA thesis
			# 4 = Unpublished PhD thesis
			# 5 = Report
			# 6 = Conference proceedings
			# 7 = Conference paper
			# 8 = General document
			
				DocType = 1,
				
			# DocTitle - the title of the document
			#
				DocTitle = {
					bundle = ca_objects.preferred_labels
				},
				
			# JournalTitle - title of the journal/magazine the article was published in; omit if this is not an article
			#
				#JournalTitle = {
				#	bundle = ca_objects.occurrences.preferred_labels
				#	options = {
				#		delimiter = ; ,
				#		restrict_to_types = [journal]
				#	}
				#},
			
			# BookTitle - title of the book in which this item was published; omit if this is not a book item
			#
				#BookTitle = {
				#	bundle = ca_objects.occurrences.preferred_labels
				#	options = {
				#		delimiter = ; ,
				#		restrict_to_types = [book]
				#	}
				#},
			
			# Volume - the volume of the journal this article was published in as an integer; omit if this is not an article.
			#
				#Volume = {
				#	bundle = ca_objects.volume
				#	options = {
				#		delimiter = ; 
				#	}
				#},
				
			# JournalIssue - the issue of the journal this article was published in as an integer; omit if this is not an article
			#
				#JournalIssue = {
				#	bundle = ca_objects.journal_issue
				#	options = {
				#		delimiter = ; 
				#	}
				#},
			
			# JournalSeason - the season of the journal this article was published in, as a string, where:
			#		Spring
			#		Summer
			#		Fall
			#		Winter
			#		omit if not applicable
			#
				#JournalSeason = {
				#	bundle = ca_objects.journal_season
				#	options = {
				#		delimiter = ; ,
				#		restrict_to_types = [book]
				#	}
				#},
				
			# JournalQuarter - the quarter of the journal this article was published in as an integer between 1 and 4; omit if this is not an article
			#
				#JournalQuarter = {
				#	bundle = ca_objects.journal_quarter
				#	options = {
				#		delimiter = ; 
				#	}
				#},
				
			# ISSN - the volume of the journal this article was published in
			#
				#ISSN = {
				#	bundle = ca_objects.issn
				#	options = {
				#		delimiter = ; 
				#	}
				#},
				
			# ISBN - the ISBN of the book
			#
				#ISBN = {
				#	bundle = ca_objects.isbn
				#	options = {
				#		delimiter = ; 
				#	}
				#},
				
			# BookPublisher - the publisher of the book
			#
				BookPublisher = {
					bundle = ca_entities.preferred_labels.displayname,
					options = {
						format = ^surname, ^forename,
						delimiter = ; ,
						restrict_to_relationship_types = [publisher]
					}
				},
				
			# PubPlace -  the publication place,
			#
				#PubPlace = {
				#	bundle = ca_objects.publishing_location
				#	options = {
				#		delimiter = ; 
				#	}
				#},
				
			# StartPage - start page for the article or item, or omit if this is a complete book
			#
				#StartPage = {
				#	bundle = ca_objects.start_page
				#	options = {
				#		delimiter = ; 
				#	}
				#},
				
			# EndPage - end page for the article or item, or omit if this is a complete book
			#
				#EndPage = {
				#	bundle = ca_objects.end_page
				#	options = {
				#		delimiter = ; 
				#	}
				#},
				
			# DocYear - the year in which this document was published
			#
				DocYear = {
					bundle = ca_objects.creation_date,
					options = {
						delimiter = ; 
					}
				},
				
			# Related people. They keys in the "People" list are integers indicating what kind of relationship the person has to this document. 
			# Valid values are:
			#			0 = author
			#			1 = editor
			#			2 = translator
			# 
			# The values are mappings. Each mapping has "forename" and "surname" keys to populate the related person's name.
			# You can pass get() options as needed. Typically you will use the 'restrict_to_relationship_types' option to control which
			# entities are listed in a given relationship type
				People = {
					0 = {
						forename = ca_entities.preferred_labels.forename,
						surname = ca_entities.preferred_labels.surname,
						options = {
							restrict_to_relationship_types = [creator]
						}
					},
					1 = {
						forename = ca_entities.preferred_labels.forename,
						surname = ca_entities.preferred_labels.surname,
						options = {
							restrict_to_relationship_types = [editor]
						}
					}
				}
		}
	}
}